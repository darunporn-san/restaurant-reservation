"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dateCellStyle = void 0;

var _colors = require("@atlaskit/theme/colors");

var textColor = {
  light: _colors.N900,
  dark: _colors.DN600
};
var primaryColor = {
  light: _colors.B400,
  dark: _colors.B100
};
var transparent = {
  light: 'transparent',
  dark: 'transparent'
};
var selectedBackground = {
  light: _colors.N500,
  dark: _colors.N0
};
var prevSelectedBackground = {
  light: _colors.B50,
  dark: _colors.B50
};
var borderColorFocused = {
  light: _colors.B100,
  dark: _colors.B75
};
var textDisabled = {
  light: _colors.N40,
  dark: _colors.N40
};
var textSelected = {
  light: _colors.N0,
  dark: _colors.N700
};
var textSibling = {
  light: _colors.N200,
  dark: _colors.N200
};
var textPreviouslySelected = {
  light: _colors.N600,
  dark: _colors.N600
};
var hoverPreviouslySelectedBackground = {
  light: _colors.B50,
  dark: _colors.B50
};
var activeBackground = {
  light: _colors.B50,
  dark: _colors.B50
};
var hoverBackground = {
  light: _colors.N30,
  dark: _colors.N800
};
var textHoverSelected = {
  light: _colors.N600,
  dark: _colors.N600
};
var backgroundColorSelectedAfter = {
  light: _colors.N700,
  dark: _colors.N700
};

var dateCellStyle = function dateCellStyle(mode) {
  return {
    all: 'unset',
    display: 'block',
    backgroundColor: transparent[mode],
    border: "2px solid ".concat(transparent[mode]),
    borderRadius: 3,
    color: textColor[mode],
    cursor: 'pointer',
    fontSize: 14,
    padding: '4px 9px',
    position: 'relative',
    textAlign: 'center',
    '&[data-sibling]': {
      color: textSibling[mode]
    },
    '&[data-today]': {
      color: primaryColor[mode],
      fontWeight: 'bold',
      '&::after': {
        backgroundColor: primaryColor[mode],
        bottom: 2,
        content: '""',
        display: 'block',
        height: 2,
        left: 2,
        position: 'absolute',
        right: 2
      },
      '&[data-selected]': {
        '&::after': {
          backgroundColor: backgroundColorSelectedAfter[mode]
        }
      }
    },
    '&[data-prev-selected]': {
      backgroundColor: prevSelectedBackground[mode],
      color: textPreviouslySelected[mode]
    },
    '&[data-selected]': {
      backgroundColor: selectedBackground[mode],
      color: textSelected[mode]
    },
    '&[data-disabled]': {
      cursor: 'not-allowed',
      color: textDisabled[mode]
    },
    '&[data-focused]': {
      border: "2px solid ".concat(borderColorFocused[mode])
    },
    '&:hover': {
      backgroundColor: hoverBackground[mode],
      color: textColor[mode]
    },
    '&:active': {
      backgroundColor: activeBackground[mode],
      color: textHoverSelected[mode]
    },
    '&[data-selected]:hover': {
      color: textHoverSelected[mode]
    },
    '&[data-prev-selected]:hover': {
      backgroundColor: hoverPreviouslySelectedBackground[mode],
      color: textHoverSelected[mode]
    },
    '&[data-disabled]:hover': {
      backgroundColor: transparent[mode],
      color: textDisabled[mode]
    },
    '&[data-sibling]:hover': {
      color: textSibling[mode]
    }
  };
};

exports.dateCellStyle = dateCellStyle;