{"ast":null,"code":"/**\n * Logic taken from https://github.com/WesSouza/calendar-base which is not maintained for quite sometime.\n * This will help us fixing any issue we might get or any new functionality we might want to support.\n * Not changing much code below. Just removed those parts which we don't need.\n */\nimport { daysPerWeek, monthsPerYear } from '../constants';\nimport getDaysInMonth from './get-days-in-month';\nexport default function getBaseCalendar(year, month) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    weekStartDay: 0\n  },\n      _ref$weekStartDay = _ref.weekStartDay,\n      weekStartDay = _ref$weekStartDay === void 0 ? 0 : _ref$weekStartDay;\n\n  var date = new Date(Date.UTC(year, month, 1, 0, 0, 0, 0));\n  var utcYear = date.getUTCFullYear();\n  var utcMonth = date.getUTCMonth();\n  var calendar = [];\n  var firstDay = date.getUTCDay();\n  var firstDate = -((daysPerWeek - weekStartDay + firstDay) % daysPerWeek);\n  var lastDate = getDaysInMonth(utcYear, utcMonth);\n  var lastDay = (lastDate - firstDate) % daysPerWeek;\n  var lastDateOfPreviousMonth = getDaysInMonth(utcYear, utcMonth - 1);\n  var dateCounter = firstDate;\n  var currentDay;\n  var currentDate;\n  var currentDateObject = null;\n  var calculatedMonth;\n  var calculatedYear;\n  var maxDateCount = lastDate - dateCounter + (lastDay !== 0 ? daysPerWeek - lastDay : 0) + firstDate;\n\n  while (dateCounter < maxDateCount) {\n    currentDate = dateCounter + 1;\n    currentDay = ((dateCounter < 1 ? daysPerWeek + dateCounter : dateCounter) + firstDay) % daysPerWeek;\n\n    if (currentDate < 1 || currentDate > lastDate) {\n      if (currentDate < 1) {\n        calculatedMonth = utcMonth - 1;\n        calculatedYear = utcYear;\n\n        if (calculatedMonth < 0) {\n          calculatedMonth = monthsPerYear - 1;\n          calculatedYear--;\n        }\n\n        currentDate = lastDateOfPreviousMonth + currentDate;\n      } else if (currentDate > lastDate) {\n        calculatedMonth = utcMonth + 1;\n        calculatedYear = utcYear;\n\n        if (calculatedMonth > monthsPerYear - 1) {\n          calculatedMonth = 0;\n          calculatedYear++;\n        }\n\n        currentDate = dateCounter - lastDate + 1;\n      }\n\n      if (calculatedMonth !== undefined && calculatedYear !== undefined) {\n        currentDateObject = {\n          day: currentDate,\n          weekDay: currentDay,\n          month: calculatedMonth,\n          year: calculatedYear,\n          siblingMonth: true\n        };\n      }\n    } else {\n      currentDateObject = {\n        day: currentDate,\n        weekDay: currentDay,\n        month: utcMonth,\n        year: utcYear\n      };\n    }\n\n    calendar.push(currentDateObject);\n    dateCounter++;\n  }\n\n  return calendar;\n}","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/node_modules/@atlaskit/calendar/dist/esm/internal/utils/get-base-calendar.js"],"names":["daysPerWeek","monthsPerYear","getDaysInMonth","getBaseCalendar","year","month","_ref","arguments","length","undefined","weekStartDay","_ref$weekStartDay","date","Date","UTC","utcYear","getUTCFullYear","utcMonth","getUTCMonth","calendar","firstDay","getUTCDay","firstDate","lastDate","lastDay","lastDateOfPreviousMonth","dateCounter","currentDay","currentDate","currentDateObject","calculatedMonth","calculatedYear","maxDateCount","day","weekDay","siblingMonth","push"],"mappings":"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","sourcesContent":["/**\n * Logic taken from https://github.com/WesSouza/calendar-base which is not maintained for quite sometime.\n * This will help us fixing any issue we might get or any new functionality we might want to support.\n * Not changing much code below. Just removed those parts which we don't need.\n */\nimport { daysPerWeek, monthsPerYear } from '../constants';\nimport getDaysInMonth from './get-days-in-month';\nexport default function getBaseCalendar(year, month) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    weekStartDay: 0\n  },\n      _ref$weekStartDay = _ref.weekStartDay,\n      weekStartDay = _ref$weekStartDay === void 0 ? 0 : _ref$weekStartDay;\n\n  var date = new Date(Date.UTC(year, month, 1, 0, 0, 0, 0));\n  var utcYear = date.getUTCFullYear();\n  var utcMonth = date.getUTCMonth();\n  var calendar = [];\n  var firstDay = date.getUTCDay();\n  var firstDate = -((daysPerWeek - weekStartDay + firstDay) % daysPerWeek);\n  var lastDate = getDaysInMonth(utcYear, utcMonth);\n  var lastDay = (lastDate - firstDate) % daysPerWeek;\n  var lastDateOfPreviousMonth = getDaysInMonth(utcYear, utcMonth - 1);\n  var dateCounter = firstDate;\n  var currentDay;\n  var currentDate;\n  var currentDateObject = null;\n  var calculatedMonth;\n  var calculatedYear;\n  var maxDateCount = lastDate - dateCounter + (lastDay !== 0 ? daysPerWeek - lastDay : 0) + firstDate;\n\n  while (dateCounter < maxDateCount) {\n    currentDate = dateCounter + 1;\n    currentDay = ((dateCounter < 1 ? daysPerWeek + dateCounter : dateCounter) + firstDay) % daysPerWeek;\n\n    if (currentDate < 1 || currentDate > lastDate) {\n      if (currentDate < 1) {\n        calculatedMonth = utcMonth - 1;\n        calculatedYear = utcYear;\n\n        if (calculatedMonth < 0) {\n          calculatedMonth = monthsPerYear - 1;\n          calculatedYear--;\n        }\n\n        currentDate = lastDateOfPreviousMonth + currentDate;\n      } else if (currentDate > lastDate) {\n        calculatedMonth = utcMonth + 1;\n        calculatedYear = utcYear;\n\n        if (calculatedMonth > monthsPerYear - 1) {\n          calculatedMonth = 0;\n          calculatedYear++;\n        }\n\n        currentDate = dateCounter - lastDate + 1;\n      }\n\n      if (calculatedMonth !== undefined && calculatedYear !== undefined) {\n        currentDateObject = {\n          day: currentDate,\n          weekDay: currentDay,\n          month: calculatedMonth,\n          year: calculatedYear,\n          siblingMonth: true\n        };\n      }\n    } else {\n      currentDateObject = {\n        day: currentDate,\n        weekDay: currentDay,\n        month: utcMonth,\n        year: utcYear\n      };\n    }\n\n    calendar.push(currentDateObject);\n    dateCounter++;\n  }\n\n  return calendar;\n}"]},"metadata":{},"sourceType":"module"}