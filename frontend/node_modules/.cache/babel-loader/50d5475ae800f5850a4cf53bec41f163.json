{"ast":null,"code":"import React from 'react';\nexport var EmptyClearIndicator = null; // This date was chosen to clearly show date and time formats (day > 12)\n// e.g. 18/02/1993 vs. 2/18/1993 and 1:00 PM vs 13:00\n\nexport var placeholderDatetime = new Date(1993, 1, 18, 13);\nexport var defaultTimes = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00'];\nexport var defaultTimeFormat = 'h:mma';\nexport var defaultDateFormat = 'YYYY/MM/DD';\nexport function padToTwo(number) {\n  return number <= 99 ? \"0\".concat(number).slice(-2) : \"\".concat(number);\n}\nexport var DropdownIndicator = function DropdownIndicator(props) {\n  // Wanted to use React.Component<{}> but that was having issues\n  // https://github.com/basarat/typescript-book/blob/master/docs/jsx/react.md#react-jsx-tip-accept-a-component-that-can-act-on-props-and-be-rendered-using-jsx\n  var Icon = props.selectProps.dropdownIndicatorIcon;\n  return Icon ? /*#__PURE__*/React.createElement(Icon, null) : null;\n};\nexport function formatDateTimeZoneIntoIso(date, time, zone) {\n  // 12:00 => 12:00, 1:00 => 01:00\n  var needsLeadingZero = /^\\d:/;\n  var sanitizedTime = needsLeadingZero.test(time) ? \"0\".concat(time) : time;\n  return \"\".concat(date, \"T\").concat(sanitizedTime).concat(zone);\n}","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/node_modules/@atlaskit/datetime-picker/dist/esm/internal/index.js"],"names":["React","EmptyClearIndicator","placeholderDatetime","Date","defaultTimes","defaultTimeFormat","defaultDateFormat","padToTwo","number","concat","slice","DropdownIndicator","props","Icon","selectProps","dropdownIndicatorIcon","createElement","formatDateTimeZoneIntoIso","date","time","zone","needsLeadingZero","sanitizedTime","test"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAIC,mBAAmB,GAAG,IAA1B,C,CAAgC;AACvC;;AAEA,OAAO,IAAIC,mBAAmB,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,CAA1B;AACP,OAAO,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,EAA6G,OAA7G,EAAsH,OAAtH,EAA+H,OAA/H,EAAwI,OAAxI,EAAiJ,OAAjJ,EAA0J,OAA1J,EAAmK,OAAnK,CAAnB;AACP,OAAO,IAAIC,iBAAiB,GAAG,OAAxB;AACP,OAAO,IAAIC,iBAAiB,GAAG,YAAxB;AACP,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AAC/B,SAAOA,MAAM,IAAI,EAAV,GAAe,IAAIC,MAAJ,CAAWD,MAAX,EAAmBE,KAAnB,CAAyB,CAAC,CAA1B,CAAf,GAA8C,GAAGD,MAAH,CAAUD,MAAV,CAArD;AACD;AACD,OAAO,IAAIG,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/D;AACA;AACA,MAAIC,IAAI,GAAGD,KAAK,CAACE,WAAN,CAAkBC,qBAA7B;AACA,SAAOF,IAAI,GAAG,aAAab,KAAK,CAACgB,aAAN,CAAoBH,IAApB,EAA0B,IAA1B,CAAhB,GAAkD,IAA7D;AACD,CALM;AAMP,OAAO,SAASI,yBAAT,CAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqD;AAC1D;AACA,MAAIC,gBAAgB,GAAG,MAAvB;AACA,MAAIC,aAAa,GAAGD,gBAAgB,CAACE,IAAjB,CAAsBJ,IAAtB,IAA8B,IAAIV,MAAJ,CAAWU,IAAX,CAA9B,GAAiDA,IAArE;AACA,SAAO,GAAGV,MAAH,CAAUS,IAAV,EAAgB,GAAhB,EAAqBT,MAArB,CAA4Ba,aAA5B,EAA2Cb,MAA3C,CAAkDW,IAAlD,CAAP;AACD","sourcesContent":["import React from 'react';\nexport var EmptyClearIndicator = null; // This date was chosen to clearly show date and time formats (day > 12)\n// e.g. 18/02/1993 vs. 2/18/1993 and 1:00 PM vs 13:00\n\nexport var placeholderDatetime = new Date(1993, 1, 18, 13);\nexport var defaultTimes = ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00'];\nexport var defaultTimeFormat = 'h:mma';\nexport var defaultDateFormat = 'YYYY/MM/DD';\nexport function padToTwo(number) {\n  return number <= 99 ? \"0\".concat(number).slice(-2) : \"\".concat(number);\n}\nexport var DropdownIndicator = function DropdownIndicator(props) {\n  // Wanted to use React.Component<{}> but that was having issues\n  // https://github.com/basarat/typescript-book/blob/master/docs/jsx/react.md#react-jsx-tip-accept-a-component-that-can-act-on-props-and-be-rendered-using-jsx\n  var Icon = props.selectProps.dropdownIndicatorIcon;\n  return Icon ? /*#__PURE__*/React.createElement(Icon, null) : null;\n};\nexport function formatDateTimeZoneIntoIso(date, time, zone) {\n  // 12:00 => 12:00, 1:00 => 01:00\n  var needsLeadingZero = /^\\d:/;\n  var sanitizedTime = needsLeadingZero.test(time) ? \"0\".concat(time) : time;\n  return \"\".concat(date, \"T\").concat(sanitizedTime).concat(zone);\n}"]},"metadata":{},"sourceType":"module"}