"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.daysGridStyle = exports.dayNameCellStyle = exports.dayNameGridStyle = exports.gridsContainerStyle = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _colors = require("@atlaskit/theme/colors");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var dayNameColor = {
  light: _colors.N200,
  dark: _colors.N200
};
var gridsContainerStyle = {
  display: 'inline-block',
  margin: 0,
  textAlign: 'center',
  width: 289,
  marginBottom: 5
};
exports.gridsContainerStyle = gridsContainerStyle;
var dayNameGridStyle = {
  border: 0,
  display: 'grid',
  gridTemplateColumns: 'repeat(7, 1fr)'
};
exports.dayNameGridStyle = dayNameGridStyle;
var dayNameSpacing = {
  padding: '8px 8px',
  minWidth: 40,
  boxSizing: 'border-box'
};

var dayNameCellStyle = function dayNameCellStyle(mode) {
  return _objectSpread(_objectSpread({
    fontWeight: 700,
    border: 0,
    color: dayNameColor[mode],
    fontSize: 11
  }, dayNameSpacing), {}, {
    textTransform: 'uppercase',
    textAlign: 'center',
    whiteSpace: 'nowrap'
  });
};

exports.dayNameCellStyle = dayNameCellStyle;
var daysGridStyle = {
  border: 0,
  display: 'grid',
  gridTemplateColumns: 'repeat(7, 1fr)'
};
exports.daysGridStyle = daysGridStyle;