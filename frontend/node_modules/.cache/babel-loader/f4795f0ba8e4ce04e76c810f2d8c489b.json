{"ast":null,"code":"var _jsxFileName = \"/Users/dsmint/restaurantreservation/src/container/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Searching from \"../components/home/Search\";\nimport ListR from \"../components/home/ListR\";\nimport { useEffect } from \"react\";\nimport data from \"../data.json\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Homepage = props => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const searching = e => {\n    dispatch({\n      type: \"SEARCHING_NAME\",\n      payload: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: \"FETCH_RESTAURANT\",\n      payload: data.restaurant\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Searching, {\n      searching: searching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ListR, {\n      data: props.restaurant.searchingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: true,\n      size: \"modal-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Homepage, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Homepage;\n\nconst mapStateToProps = state => {\n  return {\n    restaurant: state\n  };\n};\n\nexport default connect(mapStateToProps)(Homepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/src/container/Home.tsx"],"names":["React","Searching","ListR","useEffect","data","connect","useDispatch","Modal","Homepage","props","dispatch","searching","e","type","payload","target","value","restaurant","searchingList","mapStateToProps","state"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAAA;;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,SAAS,GAAIC,CAAD,IAA4C;AAC7DF,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AAFV,KAAD,CAAR;AAIA,GALD;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,QAAQ,CAAC;AACRG,MAAAA,IAAI,EAAE,kBADE;AAERC,MAAAA,OAAO,EAAEV,IAAI,CAACa;AAFN,KAAD,CAAR;AAIA,GALQ,EAKN,EALM,CAAT;AAOA,sBACC;AAAA,4BACC,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACQ,UAAN,CAAiBC;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,IAAb;AAAmB,MAAA,IAAI,EAAG;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA,kBADD;AAOA,CAxBD;;GAAMV,Q;UACYF,W;;;KADZE,Q;;AA0BN,MAAMW,eAAe,GAAIC,KAAD,IAAgB;AACvC,SAAO;AACNH,IAAAA,UAAU,EAAEG;AADN,GAAP;AAGA,CAJD;;AAKA,eAAef,OAAO,CAACc,eAAD,CAAP,CAAyBX,QAAzB,CAAf","sourcesContent":["import * as React from \"react\";\nimport Searching from \"../components/home/Search\";\nimport ListR from \"../components/home/ListR\";\nimport { useEffect } from \"react\";\nimport data from \"../data.json\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport RestaurantAction from \"./../data/action\";\nimport Modal from \"../components/Modal\";\n\nconst Homepage = (props: any) => {\n\tconst dispatch = useDispatch<Dispatch<RestaurantAction.TRestaurantReduce>>();\n\n\tconst searching = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tdispatch({\n\t\t\ttype: \"SEARCHING_NAME\",\n\t\t\tpayload: e.target.value,\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: \"FETCH_RESTAURANT\",\n\t\t\tpayload: data.restaurant,\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Searching searching={searching} />\n\t\t\t<ListR data={props.restaurant.searchingList} />\n\t\t\t<Modal show={true} size = \"modal-lg\"/>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\trestaurant: state,\n\t};\n};\nexport default connect(mapStateToProps)(Homepage);\n"]},"metadata":{},"sourceType":"module"}