{"ast":null,"code":"import _ from \"lodash\";\nexport const initialState = {\n  user: {\n    name: \"\",\n    username: \"\",\n    history: [{\n      restaurantName: \"\",\n      date: \"\",\n      time: \"\",\n      people: 0\n    }]\n  },\n  restaurant: {\n    name: \"\",\n    totalQueue: 0,\n    freeQueue: 0,\n    image: []\n  },\n  reservetion: {\n    name: \"\",\n    totalQueue: 0,\n    dateTime: \"\",\n    people: 0\n  },\n  restaurantList: [],\n  searchingList: [],\n  modalReservation: false\n};\nexport function RestaurantReducer(state = initialState, action) {\n  var _action$payload, _action$payload2;\n\n  switch (action.type) {\n    case \"FETCH_RESTAURANT\":\n      return { ...state,\n        restaurantList: action.payload,\n        searchingList: action.payload\n      };\n\n    case \"SEARCHING_NAME\":\n      state.searchingList = _.filter(state.restaurantList, elm => elm.name.includes(action.payload));\n      return { ...state\n      };\n\n    case \"MODAL_RESERVATION\":\n      return { ...state,\n        modalReservation: action.payload\n      };\n\n    case \"RESERVATION\":\n      state.reservetion.name = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.name;\n      state.reservetion.totalQueue = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.totalQueue;\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RestaurantReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantReducer\");","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/src/data/reducer.ts"],"names":["_","initialState","user","name","username","history","restaurantName","date","time","people","restaurant","totalQueue","freeQueue","image","reservetion","dateTime","restaurantList","searchingList","modalReservation","RestaurantReducer","state","action","type","payload","filter","elm","includes"],"mappings":"AAEA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAO,MAAMC,YAA+C,GAAG;AAC9DC,EAAAA,IAAI,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,OAAO,EAAE,CACR;AACCC,MAAAA,cAAc,EAAE,EADjB;AAECC,MAAAA,IAAI,EAAE,EAFP;AAGCC,MAAAA,IAAI,EAAE,EAHP;AAICC,MAAAA,MAAM,EAAE;AAJT,KADQ;AAHJ,GADwD;AAa9DC,EAAAA,UAAU,EAAE;AACXP,IAAAA,IAAI,EAAE,EADK;AAEXQ,IAAAA,UAAU,EAAE,CAFD;AAGXC,IAAAA,SAAS,EAAE,CAHA;AAIXC,IAAAA,KAAK,EAAE;AAJI,GAbkD;AAmB9DC,EAAAA,WAAW,EAAE;AACZX,IAAAA,IAAI,EAAE,EADM;AAEZQ,IAAAA,UAAU,EAAE,CAFA;AAGZI,IAAAA,QAAQ,EAAE,EAHE;AAIZN,IAAAA,MAAM,EAAG;AAJG,GAnBiD;AAyB9DO,EAAAA,cAAc,EAAE,EAzB8C;AA0B9DC,EAAAA,aAAa,EAAE,EA1B+C;AA2B9DC,EAAAA,gBAAgB,EAAE;AA3B4C,CAAxD;AA6BP,OAAO,SAASC,iBAAT,CACNC,KAAK,GAAGnB,YADF,EAENoB,MAFM,EAGL;AAAA;;AACD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,kBAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENJ,QAAAA,cAAc,EAAEK,MAAM,CAACE,OAFjB;AAGNN,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAHhB,OAAP;;AAKD,SAAK,gBAAL;AACCH,MAAAA,KAAK,CAACH,aAAN,GAAsBjB,CAAC,CAACwB,MAAF,CAASJ,KAAK,CAACJ,cAAf,EAAgCS,GAAD,IACpDA,GAAG,CAACtB,IAAJ,CAASuB,QAAT,CAAkBL,MAAM,CAACE,OAAzB,CADqB,CAAtB;AAGA,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACD,SAAK,mBAAL;AACC,aAAO,EAAE,GAAGA,KAAL;AAAYF,QAAAA,gBAAgB,EAAEG,MAAM,CAACE;AAArC,OAAP;;AACD,SAAK,aAAL;AACCH,MAAAA,KAAK,CAACN,WAAN,CAAkBX,IAAlB,sBAAyBkB,MAAM,CAACE,OAAhC,oDAAyB,gBAAgBpB,IAAzC;AACAiB,MAAAA,KAAK,CAACN,WAAN,CAAkBH,UAAlB,uBAA+BU,MAAM,CAACE,OAAtC,qDAA+B,iBAAgBZ,UAA/C;AACA,aAAO,EAAE,GAAGS;AAAL,OAAP;;AACD;AACC,aAAOA,KAAP;AAnBF;AAqBA;KAzBeD,iB","sourcesContent":["import RestaurantType from \"../typing/data\";\nimport RestaurantAction from \"./action\";\nimport _ from \"lodash\";\nexport const initialState: RestaurantType.IRestaurantInitial = {\n\tuser: {\n\t\tname: \"\",\n\t\tusername: \"\",\n\t\thistory: [\n\t\t\t{\n\t\t\t\trestaurantName: \"\",\n\t\t\t\tdate: \"\",\n\t\t\t\ttime: \"\",\n\t\t\t\tpeople: 0,\n\t\t\t},\n\t\t],\n\t},\n\trestaurant: {\n\t\tname: \"\",\n\t\ttotalQueue: 0,\n\t\tfreeQueue: 0,\n\t\timage: [],\n\t},\n\treservetion: {\n\t\tname: \"\",\n\t\ttotalQueue: 0,\n\t\tdateTime: \"\",\n\t\tpeople:  0,\n\t},\n\trestaurantList: [],\n\tsearchingList: [],\n\tmodalReservation: false,\n};\nexport function RestaurantReducer(\n\tstate = initialState,\n\taction: RestaurantAction.TRestaurantReduce\n) {\n\tswitch (action.type) {\n\t\tcase \"FETCH_RESTAURANT\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trestaurantList: action.payload,\n\t\t\t\tsearchingList: action.payload,\n\t\t\t};\n\t\tcase \"SEARCHING_NAME\":\n\t\t\tstate.searchingList = _.filter(state.restaurantList, (elm) =>\n\t\t\t\telm.name.includes(action.payload)\n\t\t\t);\n\t\t\treturn { ...state };\n\t\tcase \"MODAL_RESERVATION\":\n\t\t\treturn { ...state, modalReservation: action.payload };\n\t\tcase \"RESERVATION\":\n\t\t\tstate.reservetion.name = action.payload?.name\n\t\t\tstate.reservetion.totalQueue = action.payload?.totalQueue\n\t\t\treturn { ...state}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}