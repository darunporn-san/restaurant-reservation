{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/** @jsx jsx */\n\n\nimport { jsx } from '@emotion/core';\nimport { groupedCountries } from './data/countries';\nimport Select from './Select'; // custom option renderer\n\nvar labelCSS = function labelCSS() {\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    lineHeight: 1.2\n  };\n};\n\nvar flagCSS = function flagCSS() {\n  return {\n    fontSize: '18px',\n    marginRight: '8px'\n  };\n};\n\nvar Opt = function Opt(_ref) {\n  var children = _ref.children,\n      icon = _ref.icon;\n  return jsx(\"div\", {\n    css: labelCSS()\n  }, jsx(\"span\", {\n    css: flagCSS()\n  }, icon), children);\n}; // return the country name; used for searching\n\n\nvar getOptionLabel = function getOptionLabel(_ref2) {\n  var abbr = _ref2.abbr,\n      code = _ref2.code,\n      name = _ref2.name;\n  return \"\".concat(name, \" (\").concat(abbr.toUpperCase(), \") +\").concat(code);\n}; // set the country's abbreviation for the option value, (also searchable)\n\n\nvar getOptionValue = function getOptionValue(opt) {\n  return opt.abbr;\n}; // the text node of the control\n\n\nvar controlLabel = function controlLabel(opt) {\n  return jsx(Opt, {\n    icon: opt.icon\n  }, opt.abbr.toUpperCase());\n}; // the text node for an option\n\n\nvar optionLabel = function optionLabel(_ref3) {\n  var abbr = _ref3.abbr,\n      code = _ref3.code,\n      icon = _ref3.icon,\n      name = _ref3.name;\n  return jsx(Opt, {\n    icon: icon\n  }, name, \" (\", abbr.toUpperCase(), \") +\", code);\n}; // switch formatters based on render context (menu | value)\n\n\nvar formatOptionLabel = function formatOptionLabel(opt, _ref4) {\n  var context = _ref4.context;\n  return context === 'value' ? controlLabel(opt) : optionLabel(opt);\n}; // put it all together\n\n\nvar CountrySelect = function CountrySelect(props) {\n  return jsx(Select, _extends({\n    isClearable: false,\n    formatOptionLabel: formatOptionLabel,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    isMulti: false,\n    options: groupedCountries,\n    styles: {\n      container: function container(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          width: 105\n        });\n      },\n      dropdownIndicator: function dropdownIndicator(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          paddingLeft: 0\n        });\n      },\n      menu: function menu(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          width: 300\n        });\n      }\n    }\n  }, props));\n};\n\nexport default CountrySelect;","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/node_modules/@atlaskit/select/dist/esm/CountrySelect.js"],"names":["_extends","_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","jsx","groupedCountries","Select","labelCSS","alignItems","display","lineHeight","flagCSS","fontSize","marginRight","Opt","_ref","children","icon","css","getOptionLabel","_ref2","abbr","code","name","concat","toUpperCase","getOptionValue","opt","controlLabel","optionLabel","_ref3","formatOptionLabel","_ref4","context","CountrySelect","props","isClearable","isMulti","options","styles","container","width","dropdownIndicator","paddingLeft","menu"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { groupedCountries } from './data/countries';\nimport Select from './Select';\n\n// custom option renderer\nvar labelCSS = function labelCSS() {\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    lineHeight: 1.2\n  };\n};\n\nvar flagCSS = function flagCSS() {\n  return {\n    fontSize: '18px',\n    marginRight: '8px'\n  };\n};\n\nvar Opt = function Opt(_ref) {\n  var children = _ref.children,\n      icon = _ref.icon;\n  return jsx(\"div\", {\n    css: labelCSS()\n  }, jsx(\"span\", {\n    css: flagCSS()\n  }, icon), children);\n}; // return the country name; used for searching\n\n\nvar getOptionLabel = function getOptionLabel(_ref2) {\n  var abbr = _ref2.abbr,\n      code = _ref2.code,\n      name = _ref2.name;\n  return \"\".concat(name, \" (\").concat(abbr.toUpperCase(), \") +\").concat(code);\n}; // set the country's abbreviation for the option value, (also searchable)\n\n\nvar getOptionValue = function getOptionValue(opt) {\n  return opt.abbr;\n}; // the text node of the control\n\n\nvar controlLabel = function controlLabel(opt) {\n  return jsx(Opt, {\n    icon: opt.icon\n  }, opt.abbr.toUpperCase());\n}; // the text node for an option\n\n\nvar optionLabel = function optionLabel(_ref3) {\n  var abbr = _ref3.abbr,\n      code = _ref3.code,\n      icon = _ref3.icon,\n      name = _ref3.name;\n  return jsx(Opt, {\n    icon: icon\n  }, name, \" (\", abbr.toUpperCase(), \") +\", code);\n}; // switch formatters based on render context (menu | value)\n\n\nvar formatOptionLabel = function formatOptionLabel(opt, _ref4) {\n  var context = _ref4.context;\n  return context === 'value' ? controlLabel(opt) : optionLabel(opt);\n}; // put it all together\n\n\nvar CountrySelect = function CountrySelect(props) {\n  return jsx(Select, _extends({\n    isClearable: false,\n    formatOptionLabel: formatOptionLabel,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    isMulti: false,\n    options: groupedCountries,\n    styles: {\n      container: function container(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          width: 105\n        });\n      },\n      dropdownIndicator: function dropdownIndicator(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          paddingLeft: 0\n        });\n      },\n      menu: function menu(css) {\n        return _objectSpread(_objectSpread({}, css), {}, {\n          width: 300\n        });\n      }\n    }\n  }, props));\n};\n\nexport default CountrySelect;"]},"metadata":{},"sourceType":"module"}