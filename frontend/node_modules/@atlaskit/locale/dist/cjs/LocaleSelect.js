"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.defaultLocales = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _select = _interopRequireDefault(require("@atlaskit/select"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var defaultLocales = [{
  value: 'en-AU',
  label: 'English (Australia)'
}, {
  value: 'en-GB',
  label: 'English (United Kingdom)'
}, {
  value: 'en-US',
  label: 'English (United States)'
}, {
  value: 'ko-KR',
  label: '한국어 (대한민국)'
}, {
  value: 'nl-NL',
  label: 'Nederlands (Nederland)'
}, {
  value: 'ru-RU',
  label: 'русский (Россия)'
}, {
  value: 'hu-HU',
  label: 'magyar (Magyarország)'
}, {
  value: 'pt-BR',
  label: 'português (Brasil)'
}, {
  value: 'de-DE',
  label: 'Deutsch (Deutschland)'
}, {
  value: 'is-IS',
  label: 'íslenska (Ísland)'
}, {
  value: 'cs-CZ',
  label: 'čeština (Česká republika)'
}, {
  value: 'da-DK',
  label: 'Dansk (Danmark)'
}, {
  value: 'et-EE',
  label: 'Eesti (Eesti)'
}, {
  value: 'pl-PL',
  label: 'polski (Polska)'
}, {
  value: 'sk-SK',
  label: 'Slovenčina (Slovenská republika)'
}, {
  value: 'it-IT',
  label: 'italiano (Italia)'
}, {
  value: 'pt-PT',
  label: 'português (Portugal)'
}, {
  value: 'vi-VN',
  label: 'Tiếng Việt (Việt Nam)'
}, {
  value: 'zh-CN',
  label: '中文 (中国)'
}, {
  value: 'es-ES',
  label: 'español (España)'
}, {
  value: 'sv-SE',
  label: 'svenska (Sverige)'
}, {
  value: 'ja-JP',
  label: '日本語 (日本)'
}, {
  value: 'fi-FI',
  label: 'suomi (Suomi)'
}, {
  value: 'fr-FR',
  label: 'français (France)'
}, {
  value: 'ro-RO',
  label: 'română (România)'
}, {
  value: 'no-NO',
  label: 'norsk (Norge)'
}];
exports.defaultLocales = defaultLocales;

var LocaleSelect = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(LocaleSelect, _Component);

  var _super = _createSuper(LocaleSelect);

  function LocaleSelect() {
    (0, _classCallCheck2.default)(this, LocaleSelect);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(LocaleSelect, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          locales = _this$props.locales,
          defaultLocale = _this$props.defaultLocale,
          onLocaleChange = _this$props.onLocaleChange;
      return /*#__PURE__*/_react.default.createElement(_select.default, {
        options: locales,
        defaultValue: defaultLocale,
        onChange: function onChange(locale) {
          return onLocaleChange(locale);
        },
        styles: {
          container: function container(css) {
            return _objectSpread(_objectSpread({}, css), {}, {
              width: 300,
              margin: '0.5em 0'
            });
          },
          dropdownIndicator: function dropdownIndicator(css) {
            return _objectSpread(_objectSpread({}, css), {}, {
              paddingLeft: 0
            });
          },
          menu: function menu(css) {
            return _objectSpread(_objectSpread({}, css), {}, {
              width: 300
            });
          }
        }
      });
    }
  }]);
  return LocaleSelect;
}(_react.Component);

exports.default = LocaleSelect;
(0, _defineProperty2.default)(LocaleSelect, "defaultProps", {
  locales: defaultLocales,
  defaultLocale: defaultLocales[0],
  onLocaleChange: function onLocaleChange() {}
});