"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = require("react");

var _core = require("@emotion/core");

var _grid = require("../styles/grid");

var _date = _interopRequireDefault(require("./date"));

/** @jsx jsx */
var WeekDays = /*#__PURE__*/(0, _react.memo)(function WeekDays(_ref) {
  var weeks = _ref.weeks,
      handleClickDay = _ref.handleClickDay,
      mode = _ref.mode,
      testId = _ref.testId;
  return (0, _core.jsx)("div", {
    role: "grid",
    "data-testid": testId && "".concat(testId, "--month")
  }, weeks.map(function (week) {
    return (0, _core.jsx)("div", {
      role: "row",
      key: week.id,
      css: _grid.daysGridStyle
    }, week.values.map(function (_ref2) {
      var id = _ref2.id,
          isDisabled = _ref2.isDisabled,
          isFocused = _ref2.isFocused,
          isToday = _ref2.isToday,
          month = _ref2.month,
          isPreviouslySelected = _ref2.isPreviouslySelected,
          isSelected = _ref2.isSelected,
          isSiblingMonth = _ref2.isSiblingMonth,
          year = _ref2.year,
          day = _ref2.day;
      return (0, _core.jsx)(_date.default, {
        key: id,
        isDisabled: isDisabled,
        isFocused: isFocused,
        isToday: isToday,
        month: month,
        onClick: handleClickDay,
        isPreviouslySelected: isPreviouslySelected,
        isSelected: isSelected,
        isSibling: isSiblingMonth,
        year: year,
        mode: mode,
        testId: testId
      }, day);
    }));
  }));
});
WeekDays.displayName = 'WeekDays';
var _default = WeekDays;
exports.default = _default;