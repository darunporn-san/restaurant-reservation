{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useRef } from 'react';\nimport { arrowKeys } from '../constants';\nimport dateToString from '../utils/date-to-string';\nexport default function useHandleDateSelect(_ref) {\n  var _ref$day = _slicedToArray(_ref.day, 1),\n      dayValue = _ref$day[0],\n      _ref$month = _slicedToArray(_ref.month, 1),\n      monthValue = _ref$month[0],\n      _ref$year = _slicedToArray(_ref.year, 1),\n      yearValue = _ref$year[0],\n      _ref$selected = _slicedToArray(_ref.selected, 2),\n      selectedValue = _ref$selected[0],\n      setSelectedValue = _ref$selected[1],\n      _ref$previous = _slicedToArray(_ref.previous, 2),\n      setPreviouslySelectedValue = _ref$previous[1],\n      onSelect = _ref.onSelect,\n      navigate = _ref.navigate;\n\n  var dateRef = useRef({\n    day: dayValue,\n    month: monthValue,\n    year: yearValue\n  });\n  useEffect(function () {\n    dateRef.current = {\n      day: dayValue,\n      month: monthValue,\n      year: yearValue\n    };\n  }, [dayValue, monthValue, yearValue]);\n  var triggerOnSelect = useCallback(function (_ref2) {\n    var year = _ref2.year,\n        month = _ref2.month,\n        day = _ref2.day;\n    var iso = dateToString({\n      year: year,\n      month: month,\n      day: day\n    });\n    onSelect({\n      day: day,\n      month: month,\n      year: year,\n      iso: iso\n    });\n    setPreviouslySelectedValue(selectedValue);\n    setSelectedValue([iso]);\n  }, [onSelect, selectedValue, setPreviouslySelectedValue, setSelectedValue]);\n  var handleClickDay = useCallback(function (_ref3) {\n    var year = _ref3.year,\n        month = _ref3.month,\n        day = _ref3.day;\n    triggerOnSelect({\n      year: year,\n      month: month,\n      day: day\n    });\n  }, [triggerOnSelect]);\n  var handleContainerKeyDown = useCallback(function (e) {\n    var key = e.key;\n    var arrowKey = arrowKeys[key];\n\n    if (key === 'Enter' || key === ' ') {\n      e.preventDefault();\n      triggerOnSelect(dateRef.current);\n    } else if (arrowKey) {\n      e.preventDefault();\n      navigate(arrowKey);\n    }\n  }, [triggerOnSelect, navigate]);\n  return {\n    handleClickDay: handleClickDay,\n    handleContainerKeyDown: handleContainerKeyDown\n  };\n}","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/node_modules/@atlaskit/calendar/dist/esm/internal/hooks/use-handle-date-select.js"],"names":["_slicedToArray","useCallback","useEffect","useRef","arrowKeys","dateToString","useHandleDateSelect","_ref","_ref$day","day","dayValue","_ref$month","month","monthValue","_ref$year","year","yearValue","_ref$selected","selected","selectedValue","setSelectedValue","_ref$previous","previous","setPreviouslySelectedValue","onSelect","navigate","dateRef","current","triggerOnSelect","_ref2","iso","handleClickDay","_ref3","handleContainerKeyDown","e","key","arrowKey","preventDefault"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useRef } from 'react';\nimport { arrowKeys } from '../constants';\nimport dateToString from '../utils/date-to-string';\nexport default function useHandleDateSelect(_ref) {\n  var _ref$day = _slicedToArray(_ref.day, 1),\n      dayValue = _ref$day[0],\n      _ref$month = _slicedToArray(_ref.month, 1),\n      monthValue = _ref$month[0],\n      _ref$year = _slicedToArray(_ref.year, 1),\n      yearValue = _ref$year[0],\n      _ref$selected = _slicedToArray(_ref.selected, 2),\n      selectedValue = _ref$selected[0],\n      setSelectedValue = _ref$selected[1],\n      _ref$previous = _slicedToArray(_ref.previous, 2),\n      setPreviouslySelectedValue = _ref$previous[1],\n      onSelect = _ref.onSelect,\n      navigate = _ref.navigate;\n\n  var dateRef = useRef({\n    day: dayValue,\n    month: monthValue,\n    year: yearValue\n  });\n  useEffect(function () {\n    dateRef.current = {\n      day: dayValue,\n      month: monthValue,\n      year: yearValue\n    };\n  }, [dayValue, monthValue, yearValue]);\n  var triggerOnSelect = useCallback(function (_ref2) {\n    var year = _ref2.year,\n        month = _ref2.month,\n        day = _ref2.day;\n    var iso = dateToString({\n      year: year,\n      month: month,\n      day: day\n    });\n    onSelect({\n      day: day,\n      month: month,\n      year: year,\n      iso: iso\n    });\n    setPreviouslySelectedValue(selectedValue);\n    setSelectedValue([iso]);\n  }, [onSelect, selectedValue, setPreviouslySelectedValue, setSelectedValue]);\n  var handleClickDay = useCallback(function (_ref3) {\n    var year = _ref3.year,\n        month = _ref3.month,\n        day = _ref3.day;\n    triggerOnSelect({\n      year: year,\n      month: month,\n      day: day\n    });\n  }, [triggerOnSelect]);\n  var handleContainerKeyDown = useCallback(function (e) {\n    var key = e.key;\n    var arrowKey = arrowKeys[key];\n\n    if (key === 'Enter' || key === ' ') {\n      e.preventDefault();\n      triggerOnSelect(dateRef.current);\n    } else if (arrowKey) {\n      e.preventDefault();\n      navigate(arrowKey);\n    }\n  }, [triggerOnSelect, navigate]);\n  return {\n    handleClickDay: handleClickDay,\n    handleContainerKeyDown: handleContainerKeyDown\n  };\n}"]},"metadata":{},"sourceType":"module"}