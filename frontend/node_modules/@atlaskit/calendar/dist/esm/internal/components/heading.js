/** @jsx jsx */
import { memo, useMemo } from 'react';
import { jsx } from '@emotion/core';
import Button from '@atlaskit/button/standard-button';
import ArrowleftIcon from '@atlaskit/icon/glyph/chevron-left-large';
import ArrowrightIcon from '@atlaskit/icon/glyph/chevron-right-large';
import { N70 } from '@atlaskit/theme/colors';
import { arrowLeftButtonStyle, arrowRightButtonStyle, monthAndYearStyle as getMonthAndYearStyle, headingStyle } from '../styles/heading';
var Heading = /*#__PURE__*/memo(function Heading(_ref) {
  var monthLongTitle = _ref.monthLongTitle,
      year = _ref.year,
      handleClickPrev = _ref.handleClickPrev,
      handleClickNext = _ref.handleClickNext,
      mode = _ref.mode,
      testId = _ref.testId;
  var monthAndYearStyle = useMemo(function () {
    return getMonthAndYearStyle(mode);
  }, [mode]);
  return jsx("div", {
    css: headingStyle,
    "aria-hidden": "true"
  }, jsx(Button, {
    css: arrowLeftButtonStyle,
    appearance: "subtle",
    spacing: "none",
    tabIndex: -1,
    onClick: handleClickPrev,
    testId: testId && "".concat(testId, "--previous-month"),
    iconBefore: jsx(ArrowleftIcon, {
      label: "Last month",
      size: "medium",
      primaryColor: N70
    })
  }), jsx("div", {
    css: monthAndYearStyle,
    "data-testid": testId && "".concat(testId, "--current-month-year")
  }, "".concat(monthLongTitle, " ").concat(year)), jsx(Button, {
    css: arrowRightButtonStyle,
    appearance: "subtle",
    spacing: "none",
    tabIndex: -1,
    onClick: handleClickNext,
    testId: testId && "".concat(testId, "--next-month"),
    iconBefore: jsx(ArrowrightIcon, {
      label: "Next month",
      size: "medium",
      primaryColor: N70
    })
  }));
});
Heading.displayName = 'Heading';
export default Heading;