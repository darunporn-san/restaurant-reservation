{"ast":null,"code":"/** @jsx jsx */\nimport { memo, useMemo } from 'react';\nimport { jsx } from '@emotion/core';\nimport Button from '@atlaskit/button/standard-button';\nimport ArrowleftIcon from '@atlaskit/icon/glyph/chevron-left-large';\nimport ArrowrightIcon from '@atlaskit/icon/glyph/chevron-right-large';\nimport { N70 } from '@atlaskit/theme/colors';\nimport { arrowLeftButtonStyle, arrowRightButtonStyle, monthAndYearStyle as getMonthAndYearStyle, headingStyle } from '../styles/heading';\nvar Heading = /*#__PURE__*/memo(function Heading(_ref) {\n  var monthLongTitle = _ref.monthLongTitle,\n      year = _ref.year,\n      handleClickPrev = _ref.handleClickPrev,\n      handleClickNext = _ref.handleClickNext,\n      mode = _ref.mode,\n      testId = _ref.testId;\n  var monthAndYearStyle = useMemo(function () {\n    return getMonthAndYearStyle(mode);\n  }, [mode]);\n  return jsx(\"div\", {\n    css: headingStyle,\n    \"aria-hidden\": \"true\"\n  }, jsx(Button, {\n    css: arrowLeftButtonStyle,\n    appearance: \"subtle\",\n    spacing: \"none\",\n    tabIndex: -1,\n    onClick: handleClickPrev,\n    testId: testId && \"\".concat(testId, \"--previous-month\"),\n    iconBefore: jsx(ArrowleftIcon, {\n      label: \"Last month\",\n      size: \"medium\",\n      primaryColor: N70\n    })\n  }), jsx(\"div\", {\n    css: monthAndYearStyle,\n    \"data-testid\": testId && \"\".concat(testId, \"--current-month-year\")\n  }, \"\".concat(monthLongTitle, \" \").concat(year)), jsx(Button, {\n    css: arrowRightButtonStyle,\n    appearance: \"subtle\",\n    spacing: \"none\",\n    tabIndex: -1,\n    onClick: handleClickNext,\n    testId: testId && \"\".concat(testId, \"--next-month\"),\n    iconBefore: jsx(ArrowrightIcon, {\n      label: \"Next month\",\n      size: \"medium\",\n      primaryColor: N70\n    })\n  }));\n});\nHeading.displayName = 'Heading';\nexport default Heading;","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/node_modules/@atlaskit/calendar/dist/esm/internal/components/heading.js"],"names":["memo","useMemo","jsx","Button","ArrowleftIcon","ArrowrightIcon","N70","arrowLeftButtonStyle","arrowRightButtonStyle","monthAndYearStyle","getMonthAndYearStyle","headingStyle","Heading","_ref","monthLongTitle","year","handleClickPrev","handleClickNext","mode","testId","css","appearance","spacing","tabIndex","onClick","concat","iconBefore","label","size","primaryColor","displayName"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,SAASC,oBAAT,EAA+BC,qBAA/B,EAAsDC,iBAAiB,IAAIC,oBAA3E,EAAiGC,YAAjG,QAAqH,mBAArH;AACA,IAAIC,OAAO,GAAG,aAAaZ,IAAI,CAAC,SAASY,OAAT,CAAiBC,IAAjB,EAAuB;AACrD,MAAIC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,eAAe,GAAGH,IAAI,CAACG,eAF3B;AAAA,MAGIC,eAAe,GAAGJ,IAAI,CAACI,eAH3B;AAAA,MAIIC,IAAI,GAAGL,IAAI,CAACK,IAJhB;AAAA,MAKIC,MAAM,GAAGN,IAAI,CAACM,MALlB;AAMA,MAAIV,iBAAiB,GAAGR,OAAO,CAAC,YAAY;AAC1C,WAAOS,oBAAoB,CAACQ,IAAD,CAA3B;AACD,GAF8B,EAE5B,CAACA,IAAD,CAF4B,CAA/B;AAGA,SAAOhB,GAAG,CAAC,KAAD,EAAQ;AAChBkB,IAAAA,GAAG,EAAET,YADW;AAEhB,mBAAe;AAFC,GAAR,EAGPT,GAAG,CAACC,MAAD,EAAS;AACbiB,IAAAA,GAAG,EAAEb,oBADQ;AAEbc,IAAAA,UAAU,EAAE,QAFC;AAGbC,IAAAA,OAAO,EAAE,MAHI;AAIbC,IAAAA,QAAQ,EAAE,CAAC,CAJE;AAKbC,IAAAA,OAAO,EAAER,eALI;AAMbG,IAAAA,MAAM,EAAEA,MAAM,IAAI,GAAGM,MAAH,CAAUN,MAAV,EAAkB,kBAAlB,CANL;AAObO,IAAAA,UAAU,EAAExB,GAAG,CAACE,aAAD,EAAgB;AAC7BuB,MAAAA,KAAK,EAAE,YADsB;AAE7BC,MAAAA,IAAI,EAAE,QAFuB;AAG7BC,MAAAA,YAAY,EAAEvB;AAHe,KAAhB;AAPF,GAAT,CAHI,EAeNJ,GAAG,CAAC,KAAD,EAAQ;AACbkB,IAAAA,GAAG,EAAEX,iBADQ;AAEb,mBAAeU,MAAM,IAAI,GAAGM,MAAH,CAAUN,MAAV,EAAkB,sBAAlB;AAFZ,GAAR,EAGJ,GAAGM,MAAH,CAAUX,cAAV,EAA0B,GAA1B,EAA+BW,MAA/B,CAAsCV,IAAtC,CAHI,CAfG,EAkBuCb,GAAG,CAACC,MAAD,EAAS;AAC3DiB,IAAAA,GAAG,EAAEZ,qBADsD;AAE3Da,IAAAA,UAAU,EAAE,QAF+C;AAG3DC,IAAAA,OAAO,EAAE,MAHkD;AAI3DC,IAAAA,QAAQ,EAAE,CAAC,CAJgD;AAK3DC,IAAAA,OAAO,EAAEP,eALkD;AAM3DE,IAAAA,MAAM,EAAEA,MAAM,IAAI,GAAGM,MAAH,CAAUN,MAAV,EAAkB,cAAlB,CANyC;AAO3DO,IAAAA,UAAU,EAAExB,GAAG,CAACG,cAAD,EAAiB;AAC9BsB,MAAAA,KAAK,EAAE,YADuB;AAE9BC,MAAAA,IAAI,EAAE,QAFwB;AAG9BC,MAAAA,YAAY,EAAEvB;AAHgB,KAAjB;AAP4C,GAAT,CAlB1C,CAAV;AA+BD,CAzC8B,CAA/B;AA0CAM,OAAO,CAACkB,WAAR,GAAsB,SAAtB;AACA,eAAelB,OAAf","sourcesContent":["/** @jsx jsx */\nimport { memo, useMemo } from 'react';\nimport { jsx } from '@emotion/core';\nimport Button from '@atlaskit/button/standard-button';\nimport ArrowleftIcon from '@atlaskit/icon/glyph/chevron-left-large';\nimport ArrowrightIcon from '@atlaskit/icon/glyph/chevron-right-large';\nimport { N70 } from '@atlaskit/theme/colors';\nimport { arrowLeftButtonStyle, arrowRightButtonStyle, monthAndYearStyle as getMonthAndYearStyle, headingStyle } from '../styles/heading';\nvar Heading = /*#__PURE__*/memo(function Heading(_ref) {\n  var monthLongTitle = _ref.monthLongTitle,\n      year = _ref.year,\n      handleClickPrev = _ref.handleClickPrev,\n      handleClickNext = _ref.handleClickNext,\n      mode = _ref.mode,\n      testId = _ref.testId;\n  var monthAndYearStyle = useMemo(function () {\n    return getMonthAndYearStyle(mode);\n  }, [mode]);\n  return jsx(\"div\", {\n    css: headingStyle,\n    \"aria-hidden\": \"true\"\n  }, jsx(Button, {\n    css: arrowLeftButtonStyle,\n    appearance: \"subtle\",\n    spacing: \"none\",\n    tabIndex: -1,\n    onClick: handleClickPrev,\n    testId: testId && \"\".concat(testId, \"--previous-month\"),\n    iconBefore: jsx(ArrowleftIcon, {\n      label: \"Last month\",\n      size: \"medium\",\n      primaryColor: N70\n    })\n  }), jsx(\"div\", {\n    css: monthAndYearStyle,\n    \"data-testid\": testId && \"\".concat(testId, \"--current-month-year\")\n  }, \"\".concat(monthLongTitle, \" \").concat(year)), jsx(Button, {\n    css: arrowRightButtonStyle,\n    appearance: \"subtle\",\n    spacing: \"none\",\n    tabIndex: -1,\n    onClick: handleClickNext,\n    testId: testId && \"\".concat(testId, \"--next-month\"),\n    iconBefore: jsx(ArrowrightIcon, {\n      label: \"Next month\",\n      size: \"medium\",\n      primaryColor: N70\n    })\n  }));\n});\nHeading.displayName = 'Heading';\nexport default Heading;"]},"metadata":{},"sourceType":"module"}