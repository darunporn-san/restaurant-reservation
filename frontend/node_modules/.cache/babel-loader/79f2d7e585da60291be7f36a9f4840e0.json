{"ast":null,"code":"import { createStore } from \"redux\";\nexport const initialState = {\n  user: {\n    name: \"\",\n    username: \"\",\n    history: [{\n      restaurantName: \"\",\n      date: \"\",\n      time: \"\",\n      people: 0\n    }]\n  },\n  restaurant: {\n    name: \"\",\n    totalQueue: 0,\n    freeQueue: 0,\n    image: []\n  },\n  restaurantList: []\n};\nexport function RestaurantReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"FETCH_RESTAURANT\":\n      return { ...state,\n        restaurantList: action.payload\n      };\n\n    case \"SEARCHING_NAME\":\n      console.log('action', action.payload);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n_c = RestaurantReducer;\nconst store = createStore(RestaurantReducer);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantReducer\");","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/src/data/store.ts"],"names":["createStore","initialState","user","name","username","history","restaurantName","date","time","people","restaurant","totalQueue","freeQueue","image","restaurantList","RestaurantReducer","state","action","type","payload","console","log","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAIA,OAAO,MAAMC,YAA+C,GAAG;AAC9DC,EAAAA,IAAI,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,OAAO,EAAE,CACR;AACCC,MAAAA,cAAc,EAAE,EADjB;AAECC,MAAAA,IAAI,EAAE,EAFP;AAGCC,MAAAA,IAAI,EAAE,EAHP;AAICC,MAAAA,MAAM,EAAE;AAJT,KADQ;AAHJ,GADwD;AAa9DC,EAAAA,UAAU,EAAE;AACXP,IAAAA,IAAI,EAAE,EADK;AAEXQ,IAAAA,UAAU,EAAE,CAFD;AAGXC,IAAAA,SAAS,EAAE,CAHA;AAIXC,IAAAA,KAAK,EAAE;AAJI,GAbkD;AAmB9DC,EAAAA,cAAc,EAAG;AAnB6C,CAAxD;AAqBP,OAAO,SAASC,iBAAT,CAA2BC,KAAK,GAAGf,YAAnC,EAAiDgB,MAAjD,EAA6F;AACnG,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,kBAAL;AACC,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,cAAc,EAAEG,MAAM,CAACE;AAAnC,OAAP;;AACD,SAAK,gBAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,MAAM,CAACE,OAA5B;AACA,aAAO,EAAE,GAAGH;AAAL,OAAP;;AACD;AACC,aAAOA,KAAP;AAPF;AASA;KAVeD,iB;AAYhB,MAAMO,KAAK,GAAGtB,WAAW,CAACe,iBAAD,CAAzB;AACA,eAAeO,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport RestaurantType from \"./../typing/data\";\nimport RestaurantAction from '../data/action'\n\nexport const initialState: RestaurantType.IRestaurantInitial = {\n\tuser: {\n\t\tname: \"\",\n\t\tusername: \"\",\n\t\thistory: [\n\t\t\t{\n\t\t\t\trestaurantName: \"\",\n\t\t\t\tdate: \"\",\n\t\t\t\ttime: \"\",\n\t\t\t\tpeople: 0,\n\t\t\t},\n\t\t],\n\t},\n\trestaurant: {\n\t\tname: \"\",\n\t\ttotalQueue: 0,\n\t\tfreeQueue: 0,\n\t\timage: [],\n\t},\n\trestaurantList:  []\n};\nexport function RestaurantReducer(state = initialState, action: RestaurantAction.TRestaurantReduce) {\n\tswitch (action.type) {\n\t\tcase \"FETCH_RESTAURANT\":\n\t\t\treturn { ...state, restaurantList: action.payload };\n\t\tcase \"SEARCHING_NAME\":\n\t\t\tconsole.log('action',action.payload);\n\t\t\treturn { ...state };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst store = createStore(RestaurantReducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}