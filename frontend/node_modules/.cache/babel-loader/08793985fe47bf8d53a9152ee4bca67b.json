{"ast":null,"code":"var _jsxFileName = \"/Users/dsmint/restaurantreservation/src/components/Modal/Reservation.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { DateTimePicker } from \"@atlaskit/datetime-picker\";\nimport { TextDetail, Button } from \"../../container/style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reservation = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  console.log(\"data\", props.data);\n\n  const onChange = value => {\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Free Queue \", props.data.totalQueue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n      id: \"datetimepicker-1\",\n      onChange: onChange,\n      testId: \"dateTimePicker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextDetail, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => dispatch({\n          type: \"MODAL_RESERVATION\",\n          payload: false\n        }),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Reserve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Reservation, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Reservation;\nexport default Reservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/src/components/Modal/Reservation.tsx"],"names":["React","useDispatch","DateTimePicker","TextDetail","Button","Reservation","props","dispatch","console","log","data","onChange","value","name","totalQueue","e","type","payload"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,SAECC,cAFD,QAIO,2BAJP;AAKA,SAECC,UAFD,EAGCC,MAHD,QAKO,uBALP;;;;AASA,MAAMC,WAAmC,GAAIC,KAAD,IAAW;AAAA;;AACtD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,KAAK,CAACI,IAA1B;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAoB;AACpCJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,GAFD;;AAIA,sBACC;AAAA,4BACC;AAAA,gBAAIN,KAAK,CAACI,IAAN,CAAWG;AAAf;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gCAAeP,KAAK,CAACI,IAAN,CAAWI,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,cAAD;AACC,MAAA,EAAE,EAAC,kBADJ;AAEC,MAAA,QAAQ,EAAEH,QAFX;AAGC,MAAA,MAAM,EAAE;AAHT;AAAA;AAAA;AAAA;AAAA,YAHD,eAQC,QAAC,UAAD;AAAA,8BACE,QAAC,MAAD;AACD,QAAA,OAAO,EAAGI,CAAD,IACRR,QAAQ,CAAC;AACRS,UAAAA,IAAI,EAAE,mBADE;AAERC,UAAAA,OAAO,EAAE;AAFD,SAAD,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA,YARD;AAAA,kBADD;AAwBA,CA/BD;;GAAMZ,W;UACYJ,W;;;KADZI,W;AAgCN,eAAeA,WAAf","sourcesContent":["import * as React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport RestaurantAction from \"./../../data/action\";\nimport { IRestaurant } from \"../../typing/data\";\nimport {\n\tDatePicker,\n\tDateTimePicker,\n\tTimePicker,\n} from \"@atlaskit/datetime-picker\";\nimport {\n\tALlDetail,\n\tTextDetail,\n\tButton,\n\tPlainText,\n} from \"../../container/style\";\ninterface IReservation {\n\tdata: IRestaurant;\n}\nconst Reservation: React.FC<IReservation> = (props) => {\n\tconst dispatch = useDispatch<Dispatch<RestaurantAction.TRestaurantReduce>>();\n\tconsole.log(\"data\", props.data);\n\tconst onChange = (value: unknown) => {\n\t\tconsole.log(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<p>{props.data.name}</p>\n\t\t\t<p>Free Queue {props.data.totalQueue}</p>\n\t\t\t<DateTimePicker\n\t\t\t\tid=\"datetimepicker-1\"\n\t\t\t\tonChange={onChange}\n\t\t\t\ttestId={\"dateTimePicker\"}\n\t\t\t/>\n\t\t\t<TextDetail>\n\t\t\t\t\t<Button\n\t\t\t\tonClick={(e) =>\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: \"MODAL_RESERVATION\",\n\t\t\t\t\t\tpayload: false,\n\t\t\t\t\t})\n\t\t\t\t}>\n\t\t\t\tCancel\n\t\t\t</Button>\n\t\t\t<Button>Reserve</Button>\n\t\t\t</TextDetail>\n\t\t\n\t\t</>\n\t);\n};\nexport default Reservation;\n"]},"metadata":{},"sourceType":"module"}