{"ast":null,"code":"var _jsxFileName = \"/Users/dsmint/restaurantreservation/src/container/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport ListR from \"../components/home/ListR\";\nimport { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport Modal from \"../components/Modal\";\nimport Reservation from \"./../components/Modal/Reservation\";\nimport { SearchList, Icon, Input } from \"./../container/style\";\nimport Confirm from \"./../components/Modal/Confirm\";\nimport data from \"../data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Homepage = props => {\n  _s();\n\n  const [nextConfirm, setNextConfirm] = useState(false);\n  const dispatch = useDispatch();\n  console.log(\"nextConfirm\", props);\n  React.useMemo(() => {\n    if (props.restaurant.modalReservation) {\n      setNextConfirm(false); // dispatch({\n      // \ttype: \"RESET_RESERVATION\",\n      // \tpayload: undefined,\n      // });\n    }\n  }, [props.restaurant.modalReservation]);\n\n  const changePage = data => {\n    setNextConfirm(data === \"next\" ? true : false);\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: \"FETCH_RESTAURANT\",\n      payload: data.restaurant\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchList, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => dispatch({\n          type: \"SEARCHING_NAME\",\n          payload: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ListR, {\n      data: props.restaurant.searchingList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.restaurant.modalReservation,\n      size: \"modal-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content p-5\",\n        children: !nextConfirm ? /*#__PURE__*/_jsxDEV(Reservation, {\n          data: props.restaurant.reservetion,\n          changePage: changePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Confirm, {\n            changePage: changePage,\n            data: props.restaurant.reservetion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Homepage, \"xtCHTBNcsUTKbO/Iqq43tiMkoaA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Homepage;\n\nconst mapStateToProps = state => {\n  return {\n    restaurant: state\n  };\n};\n\nexport default connect(mapStateToProps)(Homepage);\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/dsmint/restaurantreservation/src/container/Home.tsx"],"names":["React","ListR","useState","useEffect","connect","useDispatch","Modal","Reservation","SearchList","Icon","Input","Confirm","data","Homepage","props","nextConfirm","setNextConfirm","dispatch","console","log","useMemo","restaurant","modalReservation","changePage","type","payload","e","target","value","searchingList","reservetion","mapStateToProps","state"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ListR from \"../components/home/ListR\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport RestaurantAction from \"./../data/action\";\nimport Modal from \"../components/Modal\";\nimport Reservation from \"./../components/Modal/Reservation\";\nimport { SearchList, Icon, Input } from \"./../container/style\";\nimport Confirm from \"./../components/Modal/Confirm\";\nimport data from \"../data.json\";\n\nconst Homepage = (props: any) => {\n\tconst [nextConfirm, setNextConfirm] = useState(false);\n\tconst dispatch = useDispatch<Dispatch<RestaurantAction.TRestaurantReduce>>();\n\n\tconsole.log(\"nextConfirm\", props);\n\tReact.useMemo(() => {\n\t\tif (props.restaurant.modalReservation) {\n\t\t\tsetNextConfirm(false);\n\t\t\t// dispatch({\n\t\t\t// \ttype: \"RESET_RESERVATION\",\n\t\t\t// \tpayload: undefined,\n\t\t\t// });\n\t\t}\n\t}, [props.restaurant.modalReservation]);\n\n\tconst changePage = (data: string) => {\n\t\tsetNextConfirm(data === \"next\" ? true : false);\n\t};\n\tuseEffect(() => {\n\t\tdispatch({\n\t\t\ttype: \"FETCH_RESTAURANT\",\n\t\t\tpayload: data.restaurant,\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<SearchList>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"SEARCHING_NAME\",\n\t\t\t\t\t\t\tpayload: e.target.value,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Icon>search</Icon>\n\t\t\t</SearchList>{\" \"}\n\t\t\t<ListR data={props.restaurant.searchingList} />\n\t\t\t<Modal show={props.restaurant.modalReservation} size=\"modal-lg\">\n\t\t\t\t<div className=\"modal-content p-5\">\n\t\t\t\t\t{!nextConfirm ? (\n\t\t\t\t\t\t<Reservation\n\t\t\t\t\t\t\tdata={props.restaurant.reservetion}\n\t\t\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Confirm\n\t\t\t\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\t\t\t\tdata={props.restaurant.reservetion}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: any) => {\n\treturn {\n\t\trestaurant: state,\n\t};\n};\nexport default connect(mapStateToProps)(Homepage);\n"]},"metadata":{},"sourceType":"module"}